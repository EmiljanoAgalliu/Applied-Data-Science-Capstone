import pandas as pd
import numpy as np
import aiohttp
import asyncio
import warnings

warnings.filterwarnings('ignore')

async def download_file(url, filepath):
    connector = aiohttp.TCPConnector(ssl=False)
    async with aiohttp.ClientSession(connector=connector) as session:
        async with session.get(url) as response:
             with open(filepath, 'wb') as file:
                file.write(await response.read())

def read_data(filepath):
    return pd.read_csv(filepath)

async def main():
    url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/dataset_part_1.csv"
    filepath = "../dataset_part_1.csv"
    await download_file(url, "../dataset_part_1.csv")

    df = read_data(filepath)
    pd.set_option('display.max_rows', None)
    pd.set_option('display.max_columns', None)
    print(df.head(10))
    print(df.isnull().sum() / len(df) * 100)
    print(df.dtypes)

    # Task 1
    print(df['LaunchSite'].value_counts())

    # Task 2
    print(df['Orbit'].value_counts())

    # Task 3
    landing_outcomes = df['Outcome'].value_counts()
    for i, outcome in enumerate(landing_outcomes.keys()):
        print(i, outcome)

    # Task 4
    bad_outcomes = set(landing_outcomes.keys()[[1, 3, 5, 6, 7]])
    print(bad_outcomes)
    landing_class = [0 if outcome in bad_outcomes else 1 for outcome in df['Outcome']]
    df['Class'] = landing_class
    print(df[['Class']].head(8))
    print(df["Class"].mean())

    success_rate = df["Class"].mean()
    print(f"Success rate: {success_rate}")
    success_count = (df["Class"] == 1).sum()
    print(f"Success count: {success_count}")

    fail_rate = 1 - success_rate
    print(f"Fail rate: {fail_rate}")
    fail_count = (df["Class"] == 0).sum()
    print(f"Fail count: {fail_count}")

    failed_landings = df[df['Outcome'].isin(['None None', 'False ASDS', 'False Ocean', 'False RTLS'])]
    num_failed_landings = len(failed_landings)
    print(f"Number of complete landing failures: {num_failed_landings}")

    # df.to_csv("dataset_part_2.csv", index=False)

asyncio.run(main())
