import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from math import sin, cos, sqrt, atan2, radians
import wget
import folium
import folium.plugins as plugins
from folium.plugins import MarkerCluster
from folium.plugins import MousePosition
from folium.features import DivIcon
import aiohttp
import asyncio
import warnings

warnings.filterwarnings('ignore')

async def download_file(url, filepath):
    connector = aiohttp.TCPConnector(ssl=False)
    async with aiohttp.ClientSession(connector=connector) as session:
        async with session.get(url) as response:
             with open(filepath, 'wb') as file:
                file.write(await response.read())

def read_data(filepath):
    return pd.read_csv(filepath)

async def main():
    url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/spacex_launch_geo.csv'
    filepath = "spacex_launch_geo.csv"
    await download_file(url, "spacex_launch_geo.csv")

    spacex_df = read_data(filepath)
    pd.set_option('display.max_rows', None)
    pd.set_option('display.max_columns', None)
    print(spacex_df.head(10))

    # Task 1
    spacex_df = spacex_df[['Launch Site', 'Lat', 'Long', 'class']]
    launch_sites_df = spacex_df.groupby(['Launch Site'], as_index=False).first()
    launch_sites_df = launch_sites_df[['Launch Site', 'Lat', 'Long']]
    print(launch_sites_df)

    nasa_coordinate = [29.559684888503615, -95.0830971930759]
    site_map = folium.Map(location=nasa_coordinate, zoom_start=10)

    circle = folium.Circle(nasa_coordinate, radius=1000, color='#d35400', fill=True).add_child(
        folium.Popup('NASA Johnson Space Center'))
    marker = folium.map.Marker(
        nasa_coordinate,
        icon=DivIcon(
            icon_size=(20, 20),
            icon_anchor=(0, 0),
            html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % 'NASA JSC',
        )
    )
    site_map.add_child(circle)
    site_map.add_child(marker)

    site_map = folium.Map(location=nasa_coordinate, zoom_start=5)
    for _, row in launch_sites_df.iterrows():
        site_location = [row['Lat'], row['Long']]
        site_name = row['Launch Site']
        site_circle = folium.Circle(
            site_location, radius=1000, color='blue', fill=True
        ).add_child(folium.Popup(site_name))
        site_marker = folium.Marker(
            location=site_location,
            icon=DivIcon(
                icon_size=(20, 20),
                icon_anchor=(0, 0),
                html='<div style="font-size: 12; color:blue;"><b>%s</b></div>' % site_name
            )
        )

        site_map.add_child(site_circle)
        site_map.add_child(site_marker)

    site_map.save('spacex_map.html')

    # Task 2
    spacex_df.tail(10)
    marker_cluster = MarkerCluster()

    def assign_marker_color(launch_outcome):
        if launch_outcome == 1:
            return 'green'
        else:
            return 'red'

    spacex_df['marker_color'] = spacex_df['class'].apply(assign_marker_color)
    spacex_df.tail(10)

    site_map.add_child(marker_cluster)

    for index, record in spacex_df.iterrows():
        name = record['Launch Site']
        latitude = record['Lat']
        longitude = record['Long']
        coordinate = [latitude, longitude]
        color = record['marker_color']

        marker = folium.map.Marker(
            location=coordinate,
            popup=name,
            icon=folium.Icon(color='white', icon_color=color)
        )

        marker_cluster.add_child(marker)

    site_map.save('spacex_map_2.html')

    # Task 3
    formatter = "function(num) {return L.Util.formatNum(num, 5);};"
    mouse_position = MousePosition(
        position='topright',
        separator=' Long: ',
        empty_string='NaN',
        lng_first=False,
        num_digits=20,
        prefix='Lat:',
        lat_formatter=formatter,
        lng_formatter=formatter,
    )

    site_map.add_child(mouse_position)
    site_map.save('spacex_map_3.html')

    def calculate_distance(lat1, lon1, lat2, lon2):
        R = 6373.0
        lat1 = radians(lat1)
        lon1 = radians(lon1)
        lat2 = radians(lat2)
        lon2 = radians(lon2)

        dlon = lon2 - lon1
        dlat = lat2 - lat1

        a = sin(dlat / 2) ** 2 + cos(lat1) * cos(lat2) * sin(dlon / 2) ** 2
        c = 2 * atan2(sqrt(a), sqrt(1 - a))

        distance = R * c
        return distance

    print(spacex_df[spacex_df['Launch Site'] == 'VAFB SLC-4E'])
    launch_site_lat = 34.632834
    launch_site_lon = -120.610746
    coastline_lat = 34.63543
    coastline_lon = -120.62508

    distance_coastline = calculate_distance(launch_site_lat, launch_site_lon, coastline_lat, coastline_lon)

    coordinate = [34.63543, -120.62508]

    distance_marker = folium.map.Marker(
        location=coordinate,
        icon=DivIcon(
            icon_size=(20, 20),
            icon_anchor=(0, 0),
            html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % "{:10.2f} KM".format(
                distance_coastline),
        )
    )

    site_map.add_child(distance_marker)

    def draw_line(launch_site_lat, launch_site_lon, place_lat, place_lon, place_name):
        launch_coordinate = [launch_site_lat, launch_site_lon]
        place_coordinate = [coastline_lat, coastline_lon]

        marker = folium.map.Marker(
            location=place_coordinate,
            popup=name,
            tooltip='click',
            icon=folium.Icon(color='red')
        )
        site_map.add_child(marker)

        coordinates = []
        coordinates.append(launch_coordinate)
        coordinates.append(place_coordinate)

        distance = calculate_distance(launch_site_lat, launch_site_lon, place_lat, place_lon)

        text = "{} {:0.2f}km".format(place_name, distance)
        marker = folium.map.Marker(
            location=place_coordinate,
            tooltip=text,
            icon=plugins.BeautifyIcon(
                number=round(distance, 0),
                border_color='#8D208B',
                border_width=2,
                text_color='#8D208B',
                inner_icon_style='margin-top:0px;')
        )
        site_map.add_child(marker)

        linetext = "{}{:0.2f} km".format(place_name, distance)
        folium.PolyLine(coordinates, color='#325931', weight=1.5, popup=linetext).add_to(site_map)

    launch_site_lat = 34.632834
    launch_site_lon = -120.610746
    coastline_lat = 34.63543
    coastline_lon = -120.62508

    draw_line(launch_site_lat, launch_site_lon, coastline_lat, coastline_lon, "Coastline")
    site_map.save('spacex_map_4.html')

    draw_line(launch_site_lat, launch_site_lon, 34.63858, -120.45839, "Lompoc city")
    draw_line(launch_site_lat, launch_site_lon, 34.63263, -120.62507, "Santa Barbara Subdivision MT1")
    draw_line(launch_site_lat, launch_site_lon, 34.63469, -120.61575, "Agena Way")

    site_map.save('spacex_map_5.html')


asyncio.run(main())
